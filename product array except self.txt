 
https://www.lintcode.com/problem/product-of-array-except-self/description

vector<int> productExceptSelf(vector<int> &nums) {
        // write your code here
        vector<int> izq(0, nums.size());
        vector<int> der(0, nums.size());
    
        int prod_izq = 1;
        int prod_der = 1;
        for (int i = 0; i < nums.size(); i++) {
    
            izq.push_back(prod_izq);
            der.insert(der.begin(), prod_der);
            prod_izq *= nums[i];
            prod_der *= nums[nums.size() - i  -1];
        }
    
    
        vector<int> v;
    
        for (int i = 0; i < nums.size(); i++) {
            v.push_back(izq[i] * der[i]);
        }
    
        return v;
    }